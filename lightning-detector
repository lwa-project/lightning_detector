#!/bin/sh

### BEGIN INIT INFO
# Provides:        spinning-can
# Required-Start:  none
# Required-Stop:   none
# Default-Start:   2 3 4 5
# Default-Stop:    1
# Short-Description: Start the spinning can
### END INIT INFO

. /lib/lsb/init-functions

DAEMON=/home/steve/LightningDetector/spinningCan.py
PIDFILE=/var/run/spinningCan.pid

#test -x $DAEMON || exit 5

CAN_OPTS="-c /home/steve/LightningDetector/lightning.cfg \
-l  /home/steve/LightningDetector/logs/lightning.log \
-r /home/steve/LightningDetector/logs/field.log"

LOCKFILE=/var/lock/spinningCan

lock_can() {
	if [ -x /usr/bin/lockfile-create ]; then
		lockfile-create $LOCKFILE
		lockfile-touch $LOCKFILE &
		LOCKTOUCHPID="$!"
	fi
}

unlock_can() {
	if [ -x /usr/bin/lockfile-create ] ; then
		kill $LOCKTOUCHPID
		lockfile-remove $LOCKFILE
	fi
}

RUNASUSER=steve
UGID=$(getent passwd $RUNASUSER | cut -f 3,4 -d:) || true

case $1 in
	start)
		log_daemon_msg "Starting lightning data server" "spinningCan.py"
		if [ -z "$UGID" ]; then
			log_failure_msg "user \"$RUNASUSER\" does not exist"
			exit
		fi
		lock_can
  		start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE --startas $DAEMON -- -p $PIDFILE -u $UGID $CAN_OPTS
		status=$?
		unlock_can
		log_end_msg $status
  		;;
	stop)
		log_daemon_msg "Stopping lightning data server" "spinningCan.py"
  		start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
		log_end_msg $?
		rm -f $PIDFILE
  		;;
	restart|force-reload)
		$0 stop && sleep 2 && $0 start
  		;;
	try-restart)
		if $0 status >/dev/null; then
			$0 restart
		else
			exit 0
		fi
		;;
	reload)
		exit 3
		;;
	status)
		status_of_proc $DAEMON "lightning data server"
		;;
	*)
		echo "Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
		exit 2
		;;
esac
